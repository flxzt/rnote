---

name: Release Windows

"on":
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2025
    permissions:
      # needed for uploading release artifact
      contents: write
    defaults:
      run:
        shell: msys2 {0}
    steps:

      - name: Set installer name
        id: set_installer_name
        shell: bash
        run: |
          echo "name=rnote-win-installer-$(echo ${GITHUB_REF_NAME#v} \
            | sed -e 's/[^A-Za-z0-9._-]/_/g')-x86_64" >> $GITHUB_OUTPUT

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          install: |
            mingw-w64-x86_64-binutils

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable-gnu

      - name: Configure PATH
        run: echo "export PATH=$PATH:/c/Users/$USER/.cargo/bin:/c/Program\ Files\ \(x86\)/Inno\ Setup\ 6" > ~/.bashrc

      - name: Checkout
        uses: actions/checkout@v4

      - name: Prerequisites
        run: |
          cargo install --locked just
          just ci=true prerequisites-win

      - name: Setup
        run: just ci=true setup-win '${{ steps.set_installer_name.outputs.name }}'

      - name: Build
        run: just ci=true build

      - name: Build installer
        run: just ci=true build-win-installer

      - name: Upload installer (workflow artifact)
        uses: actions/upload-artifact@v4
        with:
          name: rnote-win-installer-artifact
          path: _mesonbuild/${{ steps.set_installer_name.outputs.name }}.exe
          if-no-files-found: error

      - name: Upload installer (release asset)
        if: ${{ github.event_name == 'release' }}
        shell: powershell
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} _mesonbuild/${{ steps.set_installer_name.outputs.name }}.exe
